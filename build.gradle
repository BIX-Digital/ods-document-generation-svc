buildscript {
  ext {
    joobyVersion = "1.6.2"

		nexus_url = "${project.findProperty('nexus_url') ?: System.getenv('NEXUS_HOST')}"
		nexus_user = "${project.findProperty('nexus_user') ?: System.getenv('NEXUS_USERNAME')}"
		nexus_pw = "${project.findProperty('nexus_pw') ?: System.getenv('NEXUS_PASSWORD')}"  
    nexus_folder = "candidates"

    snippetsDir = file('build/generated-snippets')
  }

  repositories {
  	maven () {
      url "${nexus_url}/repository/jcenter/"
      credentials {
        username = "${nexus_user}"
        password = "${nexus_pw}"
      }
    }

    maven () {
      url "${nexus_url}/repository/maven-public/"
      credentials {
        username = "${nexus_user}"
        password = "${nexus_pw}"
      }
    }

    maven () {
      url "${nexus_url}/repository/atlassian_public/"
      credentials {
        username = "${nexus_user}"
        password = "${nexus_pw}"
      }
    }
  }

  dependencies {
    classpath "com.google.gradle:osdetector-gradle-plugin:1.6.2"
    classpath "io.spring.gradle:dependency-management-plugin:1.0.7.RELEASE"
    classpath "org.jooby:jooby-gradle-plugin:$joobyVersion"
  }
}

plugins {
  id "com.github.johnrengelman.shadow" version "5.1.0"
}

apply plugin: "io.spring.dependency-management"
apply plugin: "com.google.osdetector"
apply plugin: "application"
apply plugin: "distribution"
apply plugin: "groovy"
apply plugin: "jooby"

group = 'com.bix-digital.pltfmdev'
version = '0.0.1-SNAPSHOT'
mainClassName = "app.App"
sourceCompatibility = 1.8

repositories {
  maven () {
    url "${nexus_url}/repository/jcenter/"
    credentials {
      username = "${nexus_user}"
      password = "${nexus_pw}"
    }
  }

  maven () {
    url "${nexus_url}/repository/maven-public/"
    credentials {
      username = "${nexus_user}"
      password = "${nexus_pw}"
    }
  }

  maven () {
    url "${nexus_url}/repository/atlassian_public/"
    credentials {
      username = "${nexus_user}"
      password = "${nexus_pw}"
    }
  }
}

dependencyManagement {
  imports {
    mavenBom "org.jooby:jooby-bom:$joobyVersion"
  }
}

dependencies {
  compile "com.github.ben-manes.caffeine:caffeine:2.7.0"
  compile "com.github.jknack:handlebars:4.1.2"
  compile "commons-io:commons-io:2.6"
  compile "io.github.openfeign:feign-core:10.2.3"
  compile "io.github.openfeign:feign-gson:10.2.3"
  compile "net.lingala.zip4j:zip4j:1.3.3"
  compile "org.apache.httpcomponents:httpclient:4.5.8"
  compile "org.codehaus.groovy:groovy-all:2.5.7"
  compile "org.jooby:jooby-jackson"
  compile "org.jooby:jooby-netty"

  compile "io.netty:netty-transport-native-epoll:${dependencyManagement.importedProperties['netty.version']}:${osdetector.classifier.contains('linux') ? 'linux-x86_64' : ''}"
  compile "io.netty:netty-tcnative-boringssl-static:${dependencyManagement.importedProperties['boringssl.version']}" 

  testCompile "junit:junit:4.12"
  testCompile "com.github.stefanbirkner:system-rules:1.19.0" // for managing environment variables
  testCompile "com.github.tomakehurst:wiremock:2.23.2"       // for mocking HTTP server reponses
  testCompile "io.rest-assured:rest-assured:4.0.0"           // for validating REST services
  testCompile "org.spockframework:spock-core:1.3-groovy-2.5"
}

test {
	outputs.dir snippetsDir

  // Use overrides in conf/application.test.conf in ConfigFactory.load()
  // TODO: setting application.env should be enough, but apparently isn't
  systemProperty "application.env", "test"
  systemProperty "config.resource", "application.test.conf"

  testLogging {
    showStandardStreams = true
  }
}

/** We diverge from the default resources structure to adopt the Jooby standard: */
sourceSets.main.resources {
  srcDirs = ["conf", "public"]
}

/*
bootJar {
  archiveName    "app.jar"
  destinationDir  file("$buildDir/../docker")
}

uploadArchives {
    repositories{
        mavenDeployer {
            repository(url: "${nexus_url}/repository/${nexus_folder}/") {
                 authentication(userName: "${nexus_user}", password: "${nexus_pw}")
            }
            pom.artifactId = 'doc-gen'
            pom.groupId = 'com.bix-digital.pltfmdev'
            pom.version="${System.getenv("TAGVERSION")}" // we will get a TAGVERSION from environment
        }
    }
}
*/
